[{"source": "PMC", "date": "20201219", "key": "pmc.key", "infons": {}, "documents": [{"id": "4489265", "infons": {"license": "CC BY"}, "passages": [{"offset": 0, "infons": {"article-id_doi": "10.1093/nar/gkv317", "article-id_pmc": "4489265", "article-id_pmid": "25855811", "fpage": "W24", "issue": "Web Server issue", "license": "This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.", "lpage": "W29", "name_0": "surname:Somervuo;given-names:Panu", "name_1": "surname:Holm;given-names:Liisa", "section_type": "TITLE", "type": "front", "volume": "43", "year": "2015"}, "text": "SANSparallel: interactive homology search against Uniprot", "sentences": [], "annotations": [], "relations": []}, {"offset": 58, "infons": {"section_type": "ABSTRACT", "type": "abstract"}, "text": "Proteins evolve by mutations and natural selection. The network of sequence similarities is a rich source for mining homologous relationships that inform on protein structure and function. There are many servers available to browse the network of homology relationships but one has to wait up to a minute for results. The SANSparallel webserver provides protein sequence database searches with immediate response and professional alignment visualization by third-party software. The output is a list, pairwise alignment or stacked alignment of sequence-similar proteins from Uniprot, UniRef90/50, Swissprot or Protein Data Bank. The stacked alignments are viewed in Jalview or as sequence logos. The database search uses the suffix array neighborhood search (SANS) method, which has been re-implemented as a client-server, improved and parallelized. The method is extremely fast and as sensitive as BLAST above 50% sequence identity. Benchmarks show that the method is highly competitive compared to previously published fast database search programs: UBLAST, DIAMOND, LAST, LAMBDA, RAPSEARCH2 and BLAT. The web server can be accessed interactively or programmatically at http://ekhidna2.biocenter.helsinki.fi/cgi-bin/sans/sans.cgi. It can be used to make protein functional annotation pipelines more efficient, and it is useful in interactive exploration of the detailed evidence supporting the annotation of particular proteins of interest.", "sentences": [], "annotations": [], "relations": []}, {"offset": 1501, "infons": {"section_type": "INTRO", "type": "title_1"}, "text": "INTRODUCTION", "sentences": [], "annotations": [], "relations": []}, {"offset": 1514, "infons": {"section_type": "INTRO", "type": "paragraph"}, "text": "Recent years have witnessed a remarkable growth in the number of sequences. This has made database searches take longer and longer and forced free computing services and pre-computed databases to close down or resort to crowd-sourcing. SANSparallel is a web server that takes protein sequences as input and returns an approximate set of closest sequence neighbors in the blink of an eye. At the core of our web server is a fast database search engine that only takes a fraction of a second to compare a query protein against 90 million sequences in Uniprot. SANSparallel is a re-implemented, improved and parallelized version of our previous suffix array neighborhood search (SANS) algorithm. It belongs to a new generation of fast database search programs indexing the database so that short words (seeds) matching to the query can be found efficiently and independent of database size. Similar sequences can then be identified by seed extension or by counting how many seeds match one database protein. Suffix arrays bring the advantage that seed length can be adapted to increase selectivity. On the other hand, spaced seeds and reduced alphabets have been introduced to increase sensitivity. Programs implementing these techniques are orders of magnitude faster than BLAST. However, it is hard to match BLAST's sensitivity. These approaches are very suitable for mapping problems, where the match is very close and gives a clear signal. We have found previously that the approach works reliably in protein database searches above 50% sequence identity. Here, we present more benchmarking and show that SANSparallel is highly competitive in comparison with recently published programs.", "sentences": [], "annotations": [], "relations": []}, {"offset": 3203, "infons": {"section_type": "METHODS", "type": "title_1"}, "text": "MATERIALS AND METHODS", "sentences": [], "annotations": [], "relations": []}, {"offset": 3225, "infons": {"section_type": "METHODS", "type": "title_2"}, "text": "System architecture", "sentences": [], "annotations": [], "relations": []}, {"offset": 3245, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "SANSparallel runs as a client and a server. The server holds the database in memory and performs the search. We have a separate server for each database. Client processes connect to the server and transmit the query sequence to the server and the result to the user. Multiple clients can connect to the server. Concurrent clients are served one query at a time in round-robin fashion. From the users\u2019 perspective this means that the time it takes to process a query increases linearly with server load, but all users experience similar speed. Linearity of response times was maintained up to at least 100 concurrent clients (data not shown).", "sentences": [], "annotations": [], "relations": []}, {"offset": 3889, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "Underlying the web server is a CGI script which calls the client program with appropriate options and post-processes the database search results into the desired output format (Figure 1). Some processing steps use third-party software. The primary result from SANSparallel is a set of sequence-similar proteins retrieved from the database. Pairwise alignments between this set of sequences and the query sequence are generated using FASTA. The same program is used to output a BLAST-like report. The pairwise alignments are stacked against the query sequence, omitting insertions to generate gapped alignments. The stacked alignment can be colorized by Mview or sent to Skylign to generate a sequence logo. Aligned or unaligned sequences can be output in FASTA format and sent to Jalview for alignment visualization and editing. Our server does not provide multiple sequence alignments as this can be very time consuming. Instead, multiple sequence alignments can be requested from Jalview Desktop's web service menu. The response of the server is immediate and no user data or results are stored on disk except for results viewed with the Jalview applet, which requires file input.", "sentences": [], "annotations": [], "relations": []}, {"offset": 5072, "infons": {"file": "gkv317fig1.jpg", "id": "F1", "section_type": "FIG", "type": "fig_caption"}, "text": "Flowchart of the SANSparallel web server. Computations done by the web server are blue. Results sent to the user include textual outputs (green) and alignment visualizations (orange). Multiple alignment (instantiated from Jalview Desktop) and sequence logo computations utilize third party resources in the cloud (pink).", "sentences": [], "annotations": [], "relations": []}, {"offset": 5393, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "SANSparallel was developed in a Linux operating system and parallelized using openmpi. The web server runs on a cluster of computers with 500-Gb memory and 64 cores. SANSparallel was written in Fortran using legacy code from SANS, socket communications in C and the CGI script in Perl. Storage of the database in memory and additional work space take about 9 bytes per amino acid.", "sentences": [], "annotations": [], "relations": []}, {"offset": 5774, "infons": {"section_type": "METHODS", "type": "title_2"}, "text": "Database search algorithm", "sentences": [], "annotations": [], "relations": []}, {"offset": 5800, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "SANSparallel is a re-implemented, improved and parallelized version of the suffix array neighborhood search algorithm SANS. Briefly, the algorithm accumulates a vote for database proteins that are found within a window of the position where a suffix of the query sequence would be inserted in the suffix array of the database. Database proteins with the highest votes are collected and, optionally, aligned and resorted by the alignment score. The following changes were introduced: (i) a binary search to find the suffix array insertion position replaces the original mergesort. This enables searching single query sequences instead of the original batch processing. (ii) Votes are summed over diagonal bands rather than the whole protein. This improves selectivity. A similar strategy is used in the FASTA algorithm. (iii) Alignments are computed by dynamic programming in a diagonal band. This replaces the original program's greedy algorithm to combine high-scoring segment pairs. e-values are computed from the alignment score using Karlin\u2013Altschul statistics. (iv) There is a positive but not perfect correlation between the vote and pairwise alignment score. An option was added to moving down the sorted list of database proteins until the Hth-best alignment score remains stable. This results in more closely similar hits in the output. (v) The program was parallelized using MPI (Message Passing Interface). We chose a micro parallelization strategy in order to achieve fast response times for a single query. One node is reserved for communication with the client. The other nodes are dedicated to the database search. Each node works on a section of the database. The database search nodes go into hibernation when traffic is low. Search speed increased linearly up to 8\u201316 nodes; above 32 nodes there was not enough work to match communication overheads (data not shown).", "sentences": [], "annotations": [], "relations": []}, {"offset": 7689, "infons": {"section_type": "METHODS", "type": "title_2"}, "text": "Databases", "sentences": [], "annotations": [], "relations": []}, {"offset": 7699, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "The Uniprot, UniRef90, UniRef50 and Swissprot databases are downloaded monthly from ftp.ebi.ac.uk. The sequences of Protein Data Bank entries are taken weekly from the Dali server.", "sentences": [], "annotations": [], "relations": []}, {"offset": 7880, "infons": {"section_type": "METHODS", "type": "title_2"}, "text": "Benchmark data sets", "sentences": [], "annotations": [], "relations": []}, {"offset": 7900, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "The server was benchmarked using the same test set and database as in. The test set consists of 4174 predicted proteins of Dickeya solani, an emerging plant pathogen. The reference database is Uniprot frozen in 2012, which did not yet contain D. solani. The reference set of TRUE hits was generated using SSEARCH and an e-value cutoff of 1.0. Others have observed before us that implementations differ between programs and e-values are not directly comparable between programs. Therefore programs being evaluated were asked to output 1000 best hits. Hits found in the reference set were counted as true positives. Most programs compute an e-value for the hits, which operationally eliminates false positives. The hits were also subdivided into bins according to the sequence identity of the pair in the reference set. The wall-clock time to process the test set was also recorded to compare speeds.", "sentences": [], "annotations": [], "relations": []}, {"offset": 8799, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "BLAST, UBLAST, LAMBDA, RAPSEARCH2 and SANSparallel are natively parallel. LAST was run with GNUparallel using blocksize 36 000. We used pre-compiled LAMBDA v0.4.7 which could not output more than 500 hits per query; this bug was fixed but a new version was not available in time for our benchmarks (Hannes Hausdewell, personal communication). All software used were 64-bit versions except UBLAST of which only a 32-bit version is freely available. Due to 32 bits, reference database needed to be split into several chunks in order to index it. Also BLAT required the reference data to be split into several segments in order to work. The e-value threshold was set to 1.0 in all software where this option was available. In LAST, the score threshold was calculated to correspond to e-value 1.0 and was set accordingly. LAST parameter \u2013m 500 was used in order to get more hits. Otherwise default parameters were used.", "sentences": [], "annotations": [], "relations": []}, {"offset": 9717, "infons": {"section_type": "RESULTS", "type": "title_1"}, "text": "RESULTS", "sentences": [], "annotations": [], "relations": []}, {"offset": 9725, "infons": {"section_type": "RESULTS", "type": "title_2"}, "text": "Benchmarking", "sentences": [], "annotations": [], "relations": []}, {"offset": 9738, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "We tested SANSparallel against BLAST, UBLAST, LAMBDA, LAST, DIAMOND\u00a0, BLAT and RAPSEARCH2 using the same benchmark as in. Four modes of SANSparallel (verifast, fast, slow and verislow) were used which differ in the depth and speed of the search. LAMBDA outputs maximally 500 hits, therefore comparisons are shown for 1000 hits and 500 hits. The performance of all methods is quite similar above 50% sequence identity, differences are mainly seen in the detection of remote homologs below 50% sequence identity (Figure 2). The sensitivity of UBLAST is closest to BLAST. RAPSEARCH2 and BLAT are both slower and less sensitive than at least one competing method. Some aligners have tunable parameters whereby one can arbitrarily trade speed for sensitivity. Also SANSparallel gets faster when fewer hits are output (Table 1). Considering both speed and sensitivity, a group of four methods emerges with small differences between them: SANSparallel fast mode, DIAMOND, LAMBDA and LAST. Fast is the default mode in the SANSparallel web server.", "sentences": [], "annotations": [], "relations": []}, {"offset": 10778, "infons": {"file": "gkv317fig2.jpg", "id": "F2", "section_type": "FIG", "type": "fig_caption"}, "text": "Benchmark results showing the number of true positives detected in the top-1000 hits and top-500 hits binned by sequence identity.", "sentences": [], "annotations": [], "relations": []}, {"offset": 10909, "infons": {"file": "tbl1.xml", "id": "tbl1", "section_type": "TABLE", "type": "table_title_caption"}, "text": "Speed comparison of database search programs: time taken to search 4174 queries of the Dickeya solani benchmark", "sentences": [], "annotations": [], "relations": []}, {"offset": 11021, "infons": {"file": "tbl1.xml", "id": "tbl1", "section_type": "TABLE", "type": "table", "xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<table frame=\"hsides\" rules=\"groups\"><thead><tr><th align=\"left\" rowspan=\"1\" colspan=\"1\">Program</th><th align=\"right\" rowspan=\"1\" colspan=\"1\">Hits</th><th align=\"right\" rowspan=\"1\" colspan=\"1\">Cores</th><th align=\"right\" rowspan=\"1\" colspan=\"1\">Time (s)</th><th align=\"right\" rowspan=\"1\" colspan=\"1\">Relative speed</th></tr></thead><tbody><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">verifast</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">100</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">62</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">5903</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">fast</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">100</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">65</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">5631</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">verifast</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">500</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">111</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">3298</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">verifast</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">170</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">2153</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">fast</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">500</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">178</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">2056</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">LAMBDA</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">500</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">216</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1695</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">slow</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">100</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">235</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1558</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">fast</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">324</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1130</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">LAST</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16 <sup>a</sup></td><td align=\"right\" rowspan=\"1\" colspan=\"1\">327</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1119</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">slow</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">500</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">406</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">902</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">DIAMOND</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">446</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">821</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">slow</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">612</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">598</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">verislow</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">500</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">624</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">587</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">verislow</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">792</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">462</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">verifast</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1009</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">363</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">UBLAST <sup>b</sup></td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16 <sup>a</sup></td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1310</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">279</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">RAPSEARCH2</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1469</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">249</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">LAMBDA</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">500</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">2052</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">178</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">LAST</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">2957</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">124</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">fast</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">3297</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">111</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">SANS<sup>c</sup></td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">3809</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">96</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">BLAT <sup>b</sup></td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">4307</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">85</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">slow</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">5015</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">73</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">verislow</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">7094</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">52</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">RAPSEARCH2</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">18761</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">20</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">UBLAST <sup>b</sup></td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">28399</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">13</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">BLAST</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">16<sup>a</sup></td><td align=\"right\" rowspan=\"1\" colspan=\"1\">32149</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">11</td></tr><tr><td align=\"left\" rowspan=\"1\" colspan=\"1\">BLAST</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1000</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">366046</td><td align=\"right\" rowspan=\"1\" colspan=\"1\">1</td></tr></tbody></table>\n"}, "text": "Program\tHits\tCores\tTime (s)\tRelative speed\t \tverifast\t100\t16\t62\t5903\t \tfast\t100\t16\t65\t5631\t \tverifast\t500\t16\t111\t3298\t \tverifast\t1000\t16\t170\t2153\t \tfast\t500\t16\t178\t2056\t \tLAMBDA\t500\t16\t216\t1695\t \tslow\t100\t16\t235\t1558\t \tfast\t1000\t16\t324\t1130\t \tLAST\t1000\t16 a\t327\t1119\t \tslow\t500\t16\t406\t902\t \tDIAMOND\t1000\t16\t446\t821\t \tslow\t1000\t16\t612\t598\t \tverislow\t500\t16\t624\t587\t \tverislow\t1000\t16\t792\t462\t \tverifast\t1000\t1\t1009\t363\t \tUBLAST b\t1000\t16 a\t1310\t279\t \tRAPSEARCH2\t1000\t16\t1469\t249\t \tLAMBDA\t500\t1\t2052\t178\t \tLAST\t1000\t1\t2957\t124\t \tfast\t1000\t1\t3297\t111\t \tSANSc\t1000\t1\t3809\t96\t \tBLAT b\t1000\t1\t4307\t85\t \tslow\t1000\t1\t5015\t73\t \tverislow\t1000\t1\t7094\t52\t \tRAPSEARCH2\t1000\t1\t18761\t20\t \tUBLAST b\t1000\t1\t28399\t13\t \tBLAST\t1000\t16a\t32149\t11\t \tBLAST\t1000\t1\t366046\t1\t \t", "sentences": [], "annotations": [], "relations": []}, {"offset": 11773, "infons": {"file": "tbl1.xml", "id": "tbl1", "section_type": "TABLE", "type": "table_footnote"}, "text": "aGNUparallel.", "sentences": [], "annotations": [], "relations": []}, {"offset": 11787, "infons": {"file": "tbl1.xml", "id": "tbl1", "section_type": "TABLE", "type": "table_footnote"}, "text": "bDatabase split to chunks (UBLAST: 19, BLAT: 5) due to program's size limit.", "sentences": [], "annotations": [], "relations": []}, {"offset": 11864, "infons": {"file": "tbl1.xml", "id": "tbl1", "section_type": "TABLE", "type": "table_footnote"}, "text": "cSerial implementation.", "sentences": [], "annotations": [], "relations": []}, {"offset": 11888, "infons": {"section_type": "RESULTS", "type": "title_2"}, "text": "User interface", "sentences": [], "annotations": [], "relations": []}, {"offset": 11903, "infons": {"section_type": "RESULTS", "type": "title_3"}, "text": "Inputs and outputs", "sentences": [], "annotations": [], "relations": []}, {"offset": 11922, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "The website is free and open to all and there is no login requirement. The input to the server are FASTA-formatted sequences. One or multiple query sequences can be submitted in one request. The user can also choose the maximum number of hits to be output (H), the database to be searched (Uniprot, UniRef90, UniRef50, Swissprot or PDB) and a search protocol. The protocols are pre-set parameter combinations: (i) verifast mode reports H proteins with the highest vote; no alignments are computed. (ii) Fast mode is like the previous mode but reports alignment scores. (iii) Slow mode inspects 2H proteins with the highest vote and sorts them by alignment score. (iv) Verislow mode maximizes accuracy when H is small. It always inspects 4000 proteins with the highest vote and sorts them by alignment score. The vote threshold of verifast mode is set so that the false positive rate is 1\u20132% in our benchmark. The other modes only report hits with an e-value below 1. Figure 3 illustrates the search result for a predicted protein from the butterfly\u00a0Melitaea cinxia, which the cgi-script generated in 51 milliseconds. The primary output of the server is a tabular report of the hits with links to different output options (Figure 3). For example, we generate stacked alignments that are automatically loaded to Jalview for alignment editing/visualization or to Skylign for drawing sequence logos. Jalview Desktop is a standalone Java application that can be downloaded from http://www.jalview.org/download. The Jalview applet is launched from our website which must be added to the user's list of trusted sites as instructed in the tutorial (http://ekhidna2.biocenter.helsinki.fi/sans/Tutorial.html#exercises). Skylign outputs HTML5 which works on modern web browsers.", "sentences": [], "annotations": [], "relations": []}, {"offset": 13693, "infons": {"file": "gkv317fig3.jpg", "id": "F3", "section_type": "FIG", "type": "fig_caption"}, "text": "Example output.", "sentences": [], "annotations": [], "relations": []}, {"offset": 13709, "infons": {"section_type": "RESULTS", "type": "title_3"}, "text": "Programmatic access", "sentences": [], "annotations": [], "relations": []}, {"offset": 13729, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "SANSparallel can be used for both interactive and high-throughput analyses. All input and output options of the cgi-script can be included in the URL as explained in the web tutorial (http://ekhidna2.biocenter.helsinki.fi/sans/Tutorial.html#external). Thus, another web server can link to SANSparallel to retrieve information about the sequence neighbors of a particular protein. Another use of SANSparallel is in high-throughput functional annotation of proteomes or transcriptomes. For example, the web tutorial demonstrates (http://ekhidna2.biocenter.helsinki.fi/sans/Tutorial.html#perl) how to build a simple annotation pipeline where (i) the predicted protein sequences (in FASTA format) are sent to the server, (ii) the result is parsed and filtered, (iii) the best informative hit is selected as a source of annotation of the query sequence and (iv) a summary table is generated which reports the predicted annotation of each query protein and links its sequence back to SANSparallel so that anyone interested can study the evidence for the prediction interactively. Finally, it is possible to download the client-server programs in source code (http://ekhidna2.biocenter.helsinki.fi/sans/download/) and run the programs locally on local databases.", "sentences": [], "annotations": [], "relations": []}, {"offset": 14985, "infons": {"section_type": "DISCUSS", "type": "title_1"}, "text": "DISCUSSION", "sentences": [], "annotations": [], "relations": []}, {"offset": 14996, "infons": {"section_type": "DISCUSS", "type": "paragraph"}, "text": "We have improved and parallelized the suffix array neighborhood search algorithm SANS. Our benchmarking results were in line with previously published comparisons identifying UBLAST as sensitive and LAST and LAMBDA as fast. SANSparallel is competitive with DIAMOND, LAST and LAMBDA. All these programs are based on similar principles but with different implementations. Benchmarking showed that they miss few hits when sequence identity is above 50% but fall behind BLAST when sequence identity gets lower (Figure 2). Future work will focus on improving sensitivity by increasing the sequence space coverage of the seeds. The speed of SANSparallel depends on the amount of output (Table 1). LAST has no direct control on the number of hits, but this is influenced by the \u2013m parameter for the uniqueness of seeds in the database. DIAMOND and LAMBDA are designed for batch processing of large query sets like the original SANS algorithm. The SANSparallel server supports both interactive analysis of individual queries and high-throughput analysis of genomes or transcriptomes. It is simple to link to other tools, as inputs and outputs are FASTA-formatted sequences or alignments. Much can be learned by studying groups of homologous proteins instead of individual proteins. Evolutionary conservation sharpens the signal for function, secondary structure and deeper homology detection. SANSparallel facilitates such analyses by retrieving homologs from the database and performing an alignment. It is so fast that the user can change output formats, search parameters or the database interactively. Speed opens up new ways to operate. For example, functional annotations of genomes could be updated on demand, database clustering need not store all-against-all search results on disk, and sequence similarity based data integration could be done on the fly.", "sentences": [], "annotations": [], "relations": []}, {"offset": 16855, "infons": {"section_type": "ACK_FUND", "type": "title_1"}, "text": "FUNDING", "sentences": [], "annotations": [], "relations": []}, {"offset": 16863, "infons": {"section_type": "ACK_FUND", "type": "paragraph"}, "text": "Biocenter Finland. Funding for open access charge: Biocenter Finland.", "sentences": [], "annotations": [], "relations": []}, {"offset": 16933, "infons": {"section_type": "ACK_FUND", "type": "paragraph"}, "text": "Conflict of interest statement. None declared.", "sentences": [], "annotations": [], "relations": []}, {"offset": 16980, "infons": {"section_type": "REF", "type": "title"}, "text": "REFERENCES", "sentences": [], "annotations": [], "relations": []}, {"offset": 16991, "infons": {"fpage": "3389", "lpage": "3402", "name_0": "surname:Altschul;given-names:S.F.", "name_1": "surname:Madden;given-names:T.L.", "name_2": "surname:Sch\u00e4ffer;given-names:A.A.", "name_3": "surname:Zhang;given-names:J.", "name_4": "surname:Zhang;given-names:Z.", "name_5": "surname:Miller;given-names:W.", "name_6": "surname:Lipman;given-names:D.J.", "pub-id_pmid": "9254694", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "25", "year": "1997"}, "text": "Gapped BLAST and PSI-BLAST: a new generation of protein database search programs", "sentences": [], "annotations": [], "relations": []}, {"offset": 17072, "infons": {"fpage": "W20", "lpage": "W25", "name_0": "surname:McGinnis;given-names:S.", "name_1": "surname:Madden;given-names:T.L.", "pub-id_pmid": "15215342", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "32", "year": "2004"}, "text": "BLAST: at the core of a powerful and diverse set of sequence analysis tools", "sentences": [], "annotations": [], "relations": []}, {"offset": 17148, "infons": {"fpage": "W597", "lpage": "W600", "pub-id_pmid": "23671338", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "41", "year": "2013"}, "text": "", "sentences": [], "annotations": [], "relations": []}, {"offset": 17149, "infons": {"fpage": "W29", "lpage": "W37", "name_0": "surname:Finn;given-names:R.D.", "name_1": "surname:Clements;given-names:J.", "name_2": "surname:Eddy;given-names:S.R.", "pub-id_pmid": "21593126", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "39", "year": "2011"}, "text": "HMMER web server: interactive sequence similarity searching", "sentences": [], "annotations": [], "relations": []}, {"offset": 17209, "infons": {"fpage": "D546", "lpage": "D551", "name_0": "surname:Sun;given-names:S.", "name_1": "surname:Chen;given-names:J.", "name_2": "surname:Li;given-names:W.", "name_3": "surname:Altinatas;given-names:I.", "name_4": "surname:Lin;given-names:A.", "name_5": "surname:Peltier;given-names:S.", "name_6": "surname:Stocks;given-names:K.", "name_7": "surname:Allen;given-names:E.E.", "name_8": "surname:Ellisman;given-names:M.", "name_9": "surname:Grethe;given-names:J.", "pub-id_pmid": "21045053", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "39", "year": "2011"}, "text": "Community cyberinfrastructure for Advanced Microbial Ecology Research and Analysis: the CAMERA resource", "sentences": [], "annotations": [], "relations": []}, {"offset": 17313, "infons": {"fpage": "D276", "lpage": "D280", "name_0": "surname:Heger;given-names:A.", "name_1": "surname:Korpelainen;given-names:E.", "name_2": "surname:Hupponen;given-names:T.", "name_3": "surname:Mattila;given-names:K.", "name_4": "surname:Ollikainen;given-names:V.", "name_5": "surname:Holm;given-names:L.", "pub-id_pmid": "17986464", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "36", "year": "2008"}, "text": "PairsDB atlas of protein sequence space", "sentences": [], "annotations": [], "relations": []}, {"offset": 17353, "infons": {"fpage": "D252", "lpage": "D256", "name_0": "surname:Rattei;given-names:T.", "name_1": "surname:Arnold;given-names:R.", "name_2": "surname:Tischler;given-names:P.", "name_3": "surname:Lindner;given-names:D.", "name_4": "surname:St\u00fcmpflen;given-names:V.", "name_5": "surname:Mewes;given-names:H.W.", "pub-id_pmid": "16381858", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "34", "year": "2006"}, "text": "SIMAP: the similarity matrix of proteins", "sentences": [], "annotations": [], "relations": []}, {"offset": 17394, "infons": {"fpage": "D204", "lpage": "D212", "pub-id_pmid": "25348405", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "43", "year": "2015"}, "text": "UniProt: a hub for protein information", "sentences": [], "annotations": [], "relations": []}, {"offset": 17433, "infons": {"fpage": "i438", "lpage": "i443", "name_0": "surname:Koskinen;given-names:P.", "name_1": "surname:Holm;given-names:L.", "pub-id_pmid": "22962464", "section_type": "REF", "source": "Bioinformatics", "type": "ref", "volume": "28", "year": "2012"}, "text": "SANS: high-throughput retrieval of protein sequences allowing 50% mismatches", "sentences": [], "annotations": [], "relations": []}, {"offset": 17510, "infons": {"fpage": "656", "lpage": "664", "name_0": "surname:Kent;given-names:W.J.", "pub-id_pmid": "11932250", "section_type": "REF", "source": "Genome Res.", "type": "ref", "volume": "12", "year": "2002"}, "text": "BLAT\u2014the BLAST-like alignment tool", "sentences": [], "annotations": [], "relations": []}, {"offset": 17547, "infons": {"fpage": "125", "lpage": "126", "name_0": "surname:Zhao;given-names:Y.", "name_1": "surname:Tang;given-names:H.", "name_2": "surname:Ye;given-names:Y.", "pub-id_pmid": "22039206", "section_type": "REF", "source": "Bioinformatics", "type": "ref", "volume": "28", "year": "2012"}, "text": "RAPSearch2: a fast and memory-efficient protein similarity search tool for next-generation sequencing data", "sentences": [], "annotations": [], "relations": []}, {"offset": 17654, "infons": {"fpage": "i349", "lpage": "i355", "name_0": "surname:Hauswedell;given-names:H.", "name_1": "surname:Singer;given-names:J.", "name_2": "surname:Reinert;given-names:K.", "pub-id_pmid": "25161219", "section_type": "REF", "source": "Bioinformatics", "type": "ref", "volume": "30", "year": "2014"}, "text": "Lambda: the local aligner for massive biological data", "sentences": [], "annotations": [], "relations": []}, {"offset": 17708, "infons": {"fpage": "487", "lpage": "493", "name_0": "surname:Kielbasa;given-names:S.M.", "name_1": "surname:Wan;given-names:R.", "name_2": "surname:Sato;given-names:K.", "name_3": "surname:Horton;given-names:P.", "name_4": "surname:Frith;given-names:M.C.", "pub-id_pmid": "21209072", "section_type": "REF", "source": "Genome Res.", "type": "ref", "volume": "21", "year": "2011"}, "text": "Adaptive seeds tame genomic sequence comparison", "sentences": [], "annotations": [], "relations": []}, {"offset": 17756, "infons": {"fpage": "2460", "lpage": "2461", "name_0": "surname:Edgar;given-names:Robert C.", "pub-id_pmid": "20709691", "section_type": "REF", "source": "Bioinformatics", "type": "ref", "volume": "26", "year": "2010"}, "text": "Search and clustering orders of magnitude faster than BLAST", "sentences": [], "annotations": [], "relations": []}, {"offset": 17816, "infons": {"fpage": "59", "lpage": "60", "name_0": "surname:Buchfink;given-names:B.", "name_1": "surname:Xie;given-names:C.", "name_2": "surname:Huson;given-names:D.H.", "pub-id_pmid": "25402007", "section_type": "REF", "source": "Nat. Methods", "type": "ref", "volume": "12", "year": "2014"}, "text": "Fast and sensitive protein alignment using DIAMOND", "sentences": [], "annotations": [], "relations": []}, {"offset": 17867, "infons": {"fpage": "483", "lpage": "494", "name_0": "surname:Roytberg;given-names:M.", "name_1": "surname:Gambin;given-names:A.", "name_2": "surname:No\u00e9;given-names:L.", "name_3": "surname:Lasota;given-names:S.", "name_4": "surname:Furletova;given-names:E.", "name_5": "surname:Szczurek;given-names:E.", "name_6": "surname:Kucherov;given-names:G.", "pub-id_pmid": "19644175", "section_type": "REF", "source": "IEEE/ACM Trans. Comput. Biol. Bioinform.", "type": "ref", "volume": "6", "year": "2009"}, "text": "On subset seeds for protein alignment", "sentences": [], "annotations": [], "relations": []}, {"offset": 17905, "infons": {"fpage": "227", "lpage": "258", "name_0": "surname:Pearson;given-names:W.R.", "pub-id_pmid": "8743688", "section_type": "REF", "source": "Methods Enzymol.", "type": "ref", "volume": "266", "year": "1996"}, "text": "Effective protein sequence comparison", "sentences": [], "annotations": [], "relations": []}, {"offset": 17943, "infons": {"fpage": "380", "lpage": "381", "name_0": "surname:Brown;given-names:N.P.", "name_1": "surname:Leroy;given-names:C.", "name_2": "surname:Sander;given-names:C.", "pub-id_pmid": "9632837", "section_type": "REF", "source": "Bioinformatics.", "type": "ref", "volume": "14", "year": "1998"}, "text": "MView: a web-compatible database search or multiple alignment viewer", "sentences": [], "annotations": [], "relations": []}, {"offset": 18012, "infons": {"fpage": "7", "name_0": "surname:Wheeler;given-names:T.J.", "name_1": "surname:Clements;given-names:J.", "name_2": "surname:Finn;given-names:R.D.", "pub-id_pmid": "24410852", "section_type": "REF", "source": "BMC Bioinformatics.", "type": "ref", "volume": "15", "year": "2014"}, "text": "Skylign: a tool for creating informative, interactive logos representing sequence alignments and profile hidden Markov models", "sentences": [], "annotations": [], "relations": []}, {"offset": 18138, "infons": {"fpage": "1189", "lpage": "1191", "name_0": "surname:Waterhouse;given-names:A.M.", "name_1": "surname:Procter;given-names:J.B.", "name_2": "surname:Martin;given-names:D.M.", "name_3": "surname:Clamp;given-names:M.", "name_4": "surname:Barton;given-names:G.J.", "pub-id_pmid": "19151095", "section_type": "REF", "source": "Bioinformatics.", "type": "ref", "volume": "25", "year": "2009"}, "text": "Jalview Version 2\u2014a multiple sequence alignment editor and analysis workbench", "sentences": [], "annotations": [], "relations": []}, {"offset": 18218, "infons": {"comment": "ISBN-13: 978-0596002992", "name_0": "surname:Korf;given-names:I.", "name_1": "surname:Yandell;given-names:M.", "name_2": "surname:Bedell;given-names:J.", "section_type": "REF", "type": "ref", "year": "2003"}, "text": "", "sentences": [], "annotations": [], "relations": []}, {"offset": 18219, "infons": {"fpage": "W545", "lpage": "W549", "name_0": "surname:Holm;given-names:L.", "name_1": "surname:Rosenstr\u00f6m;given-names:P.", "pub-id_pmid": "20457744", "section_type": "REF", "source": "Nucleic Acids Res.", "type": "ref", "volume": "38", "year": "2010"}, "text": "Dali server: conservation mapping in 3D", "sentences": [], "annotations": [], "relations": []}, {"offset": 18259, "infons": {"fpage": "824", "lpage": "842", "name_0": "surname:Garlant;given-names:L.", "name_1": "surname:Koskinen;given-names:P.", "name_2": "surname:Liu;given-names:Y.", "name_3": "surname:Nykyri;given-names:J.", "name_4": "surname:Ahamed;given-names:S.", "name_5": "surname:Rouhiainen;given-names:L.", "name_6": "surname:Laine;given-names:P.", "name_7": "surname:Paulin;given-names:L.", "name_8": "surname:Auvinen;given-names:P.", "name_9": "surname:Holm;given-names:L.", "section_type": "REF", "source": "Diversity", "type": "ref", "volume": "5", "year": "2013"}, "text": "Genome sequence of Dickeya solani, a new soft rot pathogen of potato, suggests its emergence may be related to a novel combination of non-ribosomal peptide/polyketide synthetase clusters", "sentences": [], "annotations": [], "relations": []}, {"offset": 18446, "infons": {"fpage": "4737", "name_0": "surname:Ahola;given-names:V.", "name_1": "surname:Lehtonen;given-names:R.", "name_2": "surname:Somervuo;given-names:P.", "name_3": "surname:Salmela;given-names:L.", "name_4": "surname:Koskinen;given-names:P.", "name_5": "surname:Rastas;given-names:P.", "name_6": "surname:V\u00e4lim\u00e4ki;given-names:N.", "name_7": "surname:Paulin;given-names:L.", "name_8": "surname:Kvist;given-names:J.", "name_9": "surname:Wahlberg;given-names:N.", "pub-id_pmid": "25189940", "section_type": "REF", "source": "Nat. Commun.", "type": "ref", "volume": "5", "year": "2014"}, "text": "The Glanville fritillary butterfly retains an ancient karyotype and reveals selective chromosomal fusions in Lepidoptera", "sentences": [], "annotations": [], "relations": []}, {"offset": 18567, "infons": {"comment": "doi:10.1093/bioinformatics/btu851", "name_0": "surname:Koskinen;given-names:P.", "name_1": "surname:Toronen;given-names:P.", "name_2": "surname:Nokso-Koivisto;given-names:J.", "name_3": "surname:Holm;given-names:L.", "section_type": "REF", "source": "Bioinformatics", "type": "ref", "year": "2014"}, "text": "PANNZER\u2014high-throughput functional annotation of uncharacterized proteins in an error-prone environment", "sentences": [], "annotations": [], "relations": []}, {"offset": 18673, "infons": {"fpage": "98", "lpage": "99", "name_0": "surname:O'Donoghue;given-names:S.I.", "name_1": "surname:Sabir;given-names:K.S.", "name_2": "surname:Kalemanov;given-names:M.", "name_3": "surname:Stolte;given-names:C.", "name_4": "surname:Wellmann;given-names:B.", "name_5": "surname:Ho;given-names:V.", "name_6": "surname:Roos;given-names:M.", "name_7": "surname:Perdig\u00e3o;given-names:N.", "name_8": "surname:Buske;given-names:F.A.", "name_9": "surname:Heinrich;given-names:J.", "pub-id_pmid": "25633501", "section_type": "REF", "source": "Nat. Methods", "type": "ref", "volume": "12", "year": "2015"}, "text": "Aquaria: simplifying discovery and insight from protein structures", "sentences": [], "annotations": [], "relations": []}, {"offset": 18740, "infons": {"fpage": "55", "lpage": "72", "name_0": "surname:Rost;given-names:B.", "name_1": "surname:Sander;given-names:C.", "pub-id_pmid": "8066087", "section_type": "REF", "source": "Proteins", "type": "ref", "volume": "19", "year": "1994"}, "text": "Combining evolutionary information and neural networks to predict protein secondary structure", "sentences": [], "annotations": [], "relations": []}], "annotations": [], "relations": []}]}]