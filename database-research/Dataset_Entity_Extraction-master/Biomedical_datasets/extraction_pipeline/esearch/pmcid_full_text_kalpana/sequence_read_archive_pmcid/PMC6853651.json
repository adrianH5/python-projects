[{"source": "PMC", "date": "20231102", "key": "pmc.key", "infons": {}, "documents": [{"id": "6853651", "infons": {"license": "CC BY"}, "passages": [{"offset": 0, "infons": {"article-id_doi": "10.1093/bioinformatics/btz265", "article-id_pmc": "6853651", "article-id_pmid": "31329826", "article-id_publisher-id": "btz265", "fpage": "4537", "issue": "22", "license": "This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.", "lpage": "4542", "name_0": "surname:McNair;given-names:Katelyn", "name_1": "surname:Zhou;given-names:Carol", "name_2": "surname:Dinsdale;given-names:Elizabeth A", "name_3": "surname:Souza;given-names:Brian", "name_4": "surname:Edwards;given-names:Robert A", "name_5": "surname:Hancock;given-names:John", "section_type": "TITLE", "type": "front", "volume": "35", "year": "2019"}, "text": "PHANOTATE: a novel approach to gene identification in phage genomes", "sentences": [], "annotations": [], "relations": []}, {"offset": 68, "infons": {"section_type": "ABSTRACT", "type": "abstract_title_1"}, "text": "Abstract", "sentences": [], "annotations": [], "relations": []}, {"offset": 77, "infons": {"section_type": "ABSTRACT", "type": "abstract_title_1"}, "text": "Motivation", "sentences": [], "annotations": [], "relations": []}, {"offset": 88, "infons": {"section_type": "ABSTRACT", "type": "abstract"}, "text": "Currently there are no tools specifically designed for annotating genes in phages. Several tools are available that have been adapted to run on phage genomes, but due to their underlying design, they are unable to capture the full complexity of phage genomes. Phages have adapted their genomes to be extremely compact, having adjacent genes that overlap and genes completely inside of other longer genes. This non-delineated genome structure makes it difficult for gene prediction using the currently available gene annotators. Here we present PHANOTATE, a novel method for gene calling specifically designed for phage genomes. Although the compact nature of genes in phages is a problem for current gene annotators, we exploit this property by treating a phage genome as a network of paths: where open reading frames are favorable, and overlaps and gaps are less favorable, but still possible. We represent this network of connections as a weighted graph, and use dynamic programing to find the optimal path.", "sentences": [], "annotations": [], "relations": []}, {"offset": 1098, "infons": {"section_type": "ABSTRACT", "type": "abstract_title_1"}, "text": "Results", "sentences": [], "annotations": [], "relations": []}, {"offset": 1106, "infons": {"section_type": "ABSTRACT", "type": "abstract"}, "text": "We compare PHANOTATE to other gene callers by annotating a set of 2133 complete phage genomes from GenBank, using PHANOTATE and the three most popular gene callers. We found that the four programs agree on 82% of the total predicted genes, with PHANOTATE predicting more genes than the other three. We searched for these extra genes in both GenBank\u2019s non-redundant protein database and all of the metagenomes in the sequence read archive, and found that they are present at levels that suggest that these are functional protein-coding genes.", "sentences": [], "annotations": [], "relations": []}, {"offset": 1650, "infons": {"section_type": "ABSTRACT", "type": "abstract_title_1"}, "text": "Availability and implementation", "sentences": [], "annotations": [], "relations": []}, {"offset": 1682, "infons": {"section_type": "ABSTRACT", "type": "abstract"}, "text": " https://github.com/deprekate/PHANOTATE ", "sentences": [], "annotations": [], "relations": []}, {"offset": 1723, "infons": {"section_type": "ABSTRACT", "type": "abstract_title_1"}, "text": "Supplementary information", "sentences": [], "annotations": [], "relations": []}, {"offset": 1749, "infons": {"section_type": "ABSTRACT", "type": "abstract"}, "text": " Supplementary data are available at Bioinformatics online.", "sentences": [], "annotations": [], "relations": []}, {"offset": 1809, "infons": {"section_type": "INTRO", "type": "title_1"}, "text": "Introduction", "sentences": [], "annotations": [], "relations": []}, {"offset": 1822, "infons": {"section_type": "INTRO", "type": "paragraph"}, "text": "Phages, viruses that infect bacteria, provide unique challenges for bioinformatics. There is a limit to how much DNA can be packaged in a capsid, and therefore phage genomes are generally short, typically in the range 20\u2013100 kb. By necessity, their genomes are compact: phage genes are shorter than their bacterial homologs are frequently co-transcribed, and adjacent open reading frames (ORFs) often overlap. In a few cases, phage genes are encoded within each other. In contrast, bacterial genes generally are longer, separated by intergenic spacers and frequently switch strands. There are no bioinformatics tools specifically designed to identify genes in phage genomes, so algorithms designed to identify bacterial genes are typically used. For example, from 31 phage genomes published between October 14, 2016 and August 1, 2018, the genes in ten phage genomes were identified by GeneMark software (GeneMark/GeneMarkS/GeneMark.hmm), the genes in 10 phage genomes were identified by RAST, the genes in 7 phage genomes by Glimmer, 3 phage genomes each by Geneious, the NCBI ORF Finder, PHAST (which uses Glimmer as a gene caller), PROKKA (which uses Prodigal as a default gene caller), 2 phage genomes by Prodigal and 1 phage genome by MetaVir, RASTtk, SerialCloner or SnapGene (Supplementary Table S1; note that in many publications several different tools were used to identify genes in phage genomes). Each of these algorithms relies on information that is not available and calculations that are not possible with short genomes. For example, there are no conserved genes in phage genomes that can be used to build universal training sets, fewer genes means the statistics used to identify start codons are less accurate, and because many phage genes or the proteins they encode have no homolog in the databases, similarity searches are unreliable. There are alternate gene calling approaches, such as using positional nucleotide frequency, or the multivariate entropy of amino acid usage used by Glimmer, but these are designed for complete bacterial genomes and have not been optimized for use with phage genomes.", "sentences": [], "annotations": [], "relations": []}, {"offset": 3947, "infons": {"section_type": "INTRO", "type": "paragraph"}, "text": "Here, we introduce a novel method for gene identification that is specifically designed for phage genomes. We make several presumptions based on studying hundreds of phages genomes. First, we noted that since phages have physical limits on their genome sizes they contain minimal non-coding DNA. Second, we showed that phage genes are usually on the same strand of the DNA, presumably because they are co-transcribed. Based on these observations, we designed a completely novel approach to phage gene identification, tiling opening reading frames to minimize non-coding DNA bases and strand switching. We treat a phage genome as a network of paths in which ORFs are more favorable, and overlaps and gaps are less favorable. We solved this weighted graph problem using the Bellman-Ford algorithm, and by optimizing the parameters for phages genomes we are able to enhance phage gene prediction algorithms. In the absence of supporting data to confirm our new predictions, we turned to high-volume sequence similarity searches to explore the predicted proteins. Regions of the genome that encode proteins are more likely to be conserved at the amino acid level than regions that encode regulatory regions, replication regions, sites of integration and other, DNA-based, information components of the phage genome. These searches showed that the predicted phage genes might encode novel proteins that have been missed by existing gene callers designed to annotate bacterial genomes.", "sentences": [], "annotations": [], "relations": []}, {"offset": 5427, "infons": {"section_type": "METHODS", "type": "title_1"}, "text": "2 Materials and methods", "sentences": [], "annotations": [], "relations": []}, {"offset": 5451, "infons": {"section_type": "METHODS", "type": "title_2"}, "text": "2.1 The PHANOTATE algorithm", "sentences": [], "annotations": [], "relations": []}, {"offset": 5479, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "The first step PHANOTATE takes in identifying the genes in a phage genome is creating a weighted graph from the ORFs in that genome. By default, we allow for three start codons (codonsstart = {ATG, GTG, TTG}), and three stop codons (codonsstop\u2009=\u2009{TAA, TAG, TGA}), and the default minimum length of an ORF is 90 nt. The directed weighted graph consists of nodes that represent start and stop codons, and edges that represent either an ORF if the edge connects a start codon to a subsequent stop codon in the same reading frame; a gap if the edge connects a stop codon to a subsequent start codon in any reading frame on the same strand, or if the edge connects a stop codon to a subsequent stop codon on the alternate strand; or an overlap if the edge connects a stop codon to a preceding start codon in any other reading frame on the same strand, or to a preceding stop codon on the alternate strand. Since phages rarely have >300 bp of untranslated DNA, and to reduce computational burden, we only connect ORFs within \u00b1300 bp of each other. When there is a very large span without an ORF, we connect ORFs on each side of the region with a linear penalty.", "sentences": [], "annotations": [], "relations": []}, {"offset": 6640, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "For each edge, we calculate a weight depending on the feature type: ORF, overlap, or gap. To calculate the weight of an ORF (worf), we use an adjusted likelihood of not finding a stop codon in an ORF of this length. We count the fraction of each base in each ORF, and use that to determine the overall probability encountering a stop codon over the entire ORF: ", "sentences": [], "annotations": [], "relations": []}, {"offset": 7002, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "We then calculate P(not stop) to obtain the probability of NOT encountering a stop codon: ", "sentences": [], "annotations": [], "relations": []}, {"offset": 7093, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "Using P(not stop) alone to calculate the path through the genome is sufficient for genomes with an average GC content; however high GC content genomes have extremely long, spurious, ORFs caused by their bias of generally having a G or C in the third codon position of their protein-encoding genes, which then forces a C or G in the first position in the opposite strand, limiting the options for including stop codons in the genome. To overcome this we incorporated two GC frame plot scores into our final calculation. The initial GC frame plot (GCFP) score was inspired by Prodigal, but we have adapted that and we also include both minimum GC frame plot and maximum GC frame plot. We start by reading the three frames of the genome one base at a time, looking at the codon starting at that base, and calculating the %GC content over a 120 bp window for each of the three reading frames. Taking the set of ORFs that start with ATG, we iterate through the codons of those ORFs and determine which position (first, second or third) has the maximum GC content, and maintain a running total for that position. Similarly, we calculate a GC frame plot minimum score by recording the minimum GC content (pseudocode is provided in Supplementary Material). This gives us a count of the frequency of the three positions in all ORFs that start with ATG and can be used to estimate the preferred reading frame at any location. We translate these three numbers into scores by dividing each by the counts for the position with the highest count, bringing the preferred maximum GC position to 1, and the others to <1. This yields a set of three position scores that range between 0 and 1, with 1 being the maximal or minimal GC frame. For instance, if the input genome had a bias where half of its max GC frame was in the third frame, and the other half split evenly between the first and second frame, once normalized, the GCFPmax scores would be [0.5, 0.5, 1]. The GC frame plot scores are used to exponentiate the P(not stop) score. For example, if a codon\u2019s GCFPmax score was 1, which would match the preferred frame, then P(not stop) is unchanged. However, if a codon\u2019s GCFPmax score is less than 1, indicating that the current ORF is in a different frame to the preferred GC frame at that location in the genome, then that codon\u2019s P(not stop) value is reduced in the final calculation.", "sentences": [], "annotations": [], "relations": []}, {"offset": 9477, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "Scores for ORFs are modified by a weighted ribosomal-binding site (RBS) score. Since little is currently known about the diversity of RBSs in phages, we employed a similar likelihood-based Shine-Dalgarno RBS system used previously. We plan to add a more rigorous non-Shine-Dalgarno RBS motif finder in subsequent versions of PHANOTATE. In addition, we adjust the ORF score based on the likelihood that the first codon is a start. We created a normalized frequency of start codons based on all genes predicted in GenBank in 2133 phage genomes. Finally, the weight is negated to denote these edges as favorable in the network.", "sentences": [], "annotations": [], "relations": []}, {"offset": 10102, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "The calculation to generate a weighted score worf for each ORF in the graph is shown in Equation (5).", "sentences": [], "annotations": [], "relations": []}, {"offset": 10204, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "When continuing from a stop codon either in a gap or an overlap, the next ORF maybe on either strand of the DNA sequence. However, phage genes are usually on the same strand, and unlike bacterial genes, they rarely switch strands. If a strand switch occurs, then a strand switch penalty is included in the weight of the gap or overlap, where P(switch) is equal to 0.05, otherwise no penalty is added: P(switch) = {0, 0.05}. This penalty is the multiplicative inverse of the probability of a strand switch occurring, which was calculated from our set of annotated genes derived from the 2133 phage genomes to occur at a rate of \u223c5% per protein-encoding gene (in contrast, the rate per bacterial protein-encoding gene is \u223c25%).", "sentences": [], "annotations": [], "relations": []}, {"offset": 10934, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "Since gap weights (wgap) need to be proportionally scaled to ORF weights, we use a similar weight as ORFs (worf). They are not corrected for GC frame plot, and use a genome-wide average probability of not finding a stop codon  (not stop) that is exponentiated by the length of the gap, and then the positive multiplicative inverse is taken and combined with P(switch) (Equation\u00a03). ", "sentences": [], "annotations": [], "relations": []}, {"offset": 11318, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "Overlap weights (woverlap) also need to be proportionally scaled to ORF weights, so they are calculated by finding the average of the two coding weights of the ORFs in the overlap, and then exponentiating by the length, n, of the overlap (Equation\u00a04). If a strand switch occurs, then a penalty is added to the gap weight as noted above. ", "sentences": [], "annotations": [], "relations": []}, {"offset": 11657, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "In order to use these weights in with the Bellman-Ford algorithm, they must be transformed into \u2018distances\u2019, so for each of the above weights, we take the multiplicative inverse of the probabilities to create a weighted graph network. Our novel C-based implementation of the Bellman-Ford algorithm is then used to find the shortest path through the network.", "sentences": [], "annotations": [], "relations": []}, {"offset": 12019, "infons": {"section_type": "METHODS", "type": "title_2"}, "text": "2.2 Comparison with other gene callers", "sentences": [], "annotations": [], "relations": []}, {"offset": 12058, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "We compared gene identification between PHANOTATE and the three most popular gene callers used to identify genes in phages (Supplementary Table S1): GeneMarkS, Glimmer, and Prodigal using a set of 2133 complete phage genomes, which were downloaded from the GenBank FTP server. We did not include nine Mycoplasma and Spiroplasma phages, which use an alternative genetic code. We ran PHANOTATE and each of the three alternative gene callers with default (or \u2018phage\u2019 if available) parameters on each phage genome, as is done for most phage genome annotation projects (Supplementary Table S1). In addition, the \u2018meta\u2019 option was used to allow Prodigal to run on genomes smaller than 20 kb. ", "sentences": [], "annotations": [], "relations": []}, {"offset": 12753, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "To mask out functional, but non-protein-coding regions of the genomes, we used the program tRNAscan-SE to find the tRNA genes in each genome. To compare the algorithms, we counted the number of ORFs predicted by each respective algorithm and compared those predictions to the corresponding genes in GenBank.", "sentences": [], "annotations": [], "relations": []}, {"offset": 13061, "infons": {"section_type": "METHODS", "type": "title_2"}, "text": "2.3 Statistical analyses", "sentences": [], "annotations": [], "relations": []}, {"offset": 13086, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "All analyses were performed in Python using the statsmodels and scipy modules (scipy.org). ANOVA, Tukey\u2019s honest significant difference test, Levene\u2019s test, Cohen\u2019s f2 test and t-tests were performed on ln(x + 1)-normalized length or count data.", "sentences": [], "annotations": [], "relations": []}, {"offset": 13338, "infons": {"section_type": "METHODS", "type": "title_2"}, "text": "2.4 Validation against the sequence read archive", "sentences": [], "annotations": [], "relations": []}, {"offset": 13387, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "In the absence of direct protein measurements, we used conserved similarity to test whether ORFs are likely to encode proteins. To create a positive control set, we combined the 223\u2009385 ORFs that were predicted to encode proteins by one or more of Glimmer, GeneMarkS or Prodigal. To create a negative control set, we identified the 1\u2009122\u2009336 ORFs over 90 nt that were not predicted to encode proteins by any software (Glimmer, GeneMarkS, Prodigal or PHANOTATE). Finally, we also identified the 15\u2009105 ORFs that were unique to PHANOTATE (Fig.\u00a01). We previously developed partie to identify the random community genomes (metagenomes) in the NCBI Sequence Read Archive (SRA). We used lastal to compare six-frame translations of a 100\u2009000 read sample of the sequence reads from these metagenomes in the SRA to the predicted protein sequences from the ORFs. Sequences with an expect value <1 \u00d7 10\u221210 were considered significant. The differences in means were compared using a one-way ANOVA followed by a post hoc Tukey\u2019s test to identify the variables driving any difference. Normality was tested using Levene\u2019s test. Cohen\u2019s f2 test was used to determine effect size. ", "sentences": [], "annotations": [], "relations": []}, {"offset": 14572, "infons": {"file": "btz265f1.jpg", "id": "btz265-F1", "section_type": "FIG", "type": "fig_caption"}, "text": "Number of genes predicted by each of four different gene prediction algorithms and the combinations thereof. Orange background: predicted by a single algorithm; green background: predicted by two algorithms; blue background: predicted by three algorithms; pink background: predicted by all four algorithms", "sentences": [], "annotations": [], "relations": []}, {"offset": 14878, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "These datasets are uneven and large and therefore direct comparisons may lead to small effects being found to be significant. To overcome this we measure both Cohen\u2019s f2 and d values to measure effect size. In addition, we subsample 1000 proteins with replacement at random from the entire pool of ORFs and use those in the ANOVA. We repeat this calculation 1000 times to determine whether the PHANOTATE predictions are similar to either the set of positive predicted proteins or the negative control set of ORFs that were not predicted to encode proteins.", "sentences": [], "annotations": [], "relations": []}, {"offset": 15437, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": "The Git repository contains a detailed description of the approach used to compare the SRA reads to the predicted ORFs, contains a link to the alignment data, and contains Jupyter notebooks with the statistical analysis reported below.", "sentences": [], "annotations": [], "relations": []}, {"offset": 15673, "infons": {"section_type": "METHODS", "type": "paragraph"}, "text": " https://github.com/deprekate/PHANOTATE ", "sentences": [], "annotations": [], "relations": []}, {"offset": 15714, "infons": {"section_type": "RESULTS", "type": "title_1"}, "text": "3 Results", "sentences": [], "annotations": [], "relations": []}, {"offset": 15724, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "PHANOTATE is a novel gene caller designed explicitly to identify phage genes. We used the Bellman-Ford algorithm to treat the genome like a path, and parameterized the search by calculating the weights from 2133 phage genomes in GenBank. To test PHANOTATE, we calculated the number of genes predicted by our algorithm and compared that to the genes predicted by those algorithms typically used to call genes in phages (Supplementary Table S1), namely Glimmer, GeneMarkS and Prodigal. In total, we identified 239\u00a0072 genes from 2133 phage genomes (Table\u00a01). ", "sentences": [], "annotations": [], "relations": []}, {"offset": 16284, "infons": {"file": "btz265-T1.xml", "id": "btz265-T1", "section_type": "TABLE", "type": "table_caption"}, "text": "Numbers and lengths of the genes predicted by the different gene callers", "sentences": [], "annotations": [], "relations": []}, {"offset": 16357, "infons": {"file": "btz265-T1.xml", "id": "btz265-T1", "section_type": "TABLE", "type": "table", "xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<table frame=\"hsides\" rules=\"groups\"><colgroup span=\"1\"><col valign=\"top\" align=\"left\" span=\"1\"/><col valign=\"top\" align=\"center\" span=\"1\"/><col valign=\"top\" align=\"char\" char=\".\" span=\"1\"/><col valign=\"top\" align=\"char\" char=\".\" span=\"1\"/></colgroup><thead><tr><th rowspan=\"1\" colspan=\"1\">Gene caller</th><th rowspan=\"1\" colspan=\"1\">Number of genes</th><th rowspan=\"1\" colspan=\"1\">Mean length (nt)</th><th rowspan=\"1\" colspan=\"1\">SD of gene length (nt)</th></tr></thead><tbody><tr><td rowspan=\"1\" colspan=\"1\">PHANOTATE</td><td rowspan=\"1\" colspan=\"1\">225\u00a0518</td><td rowspan=\"1\" colspan=\"1\">603</td><td rowspan=\"1\" colspan=\"1\">708</td></tr><tr><td rowspan=\"1\" colspan=\"1\">GeneMarkS</td><td rowspan=\"1\" colspan=\"1\">213\u00a0101</td><td rowspan=\"1\" colspan=\"1\">628</td><td rowspan=\"1\" colspan=\"1\">719</td></tr><tr><td rowspan=\"1\" colspan=\"1\">Glimmer</td><td rowspan=\"1\" colspan=\"1\">211\u00a0278</td><td rowspan=\"1\" colspan=\"1\">631</td><td rowspan=\"1\" colspan=\"1\">719</td></tr><tr><td rowspan=\"1\" colspan=\"1\">Prodigal</td><td rowspan=\"1\" colspan=\"1\">211\u00a0886</td><td rowspan=\"1\" colspan=\"1\">631</td><td rowspan=\"1\" colspan=\"1\">720</td></tr></tbody></table>\n"}, "text": "Gene caller\tNumber of genes\tMean length (nt)\tSD of gene length (nt)\t \tPHANOTATE\t225\u00a0518\t603\t708\t \tGeneMarkS\t213\u00a0101\t628\t719\t \tGlimmer\t211\u00a0278\t631\t719\t \tProdigal\t211\u00a0886\t631\t720\t \t", "sentences": [], "annotations": [], "relations": []}, {"offset": 16541, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "There was no statistically significant difference in the mean lengths of the genes predicted Glimmer or Prodigal, while the mean lengths of the genes predicted by PHANOTATE and GeneMarkS were statistically significantly different to those called by the other algorithms [F(3, 861\u2009779) = 440.45, P = 0.0]. However, the effect size of the difference was very small (d < 0.1 in every pairwise comparison).", "sentences": [], "annotations": [], "relations": []}, {"offset": 16946, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "The Jaccard index (J) calculated from these results show that Prodigal and GeneMarkS are the most similar in their predictions (J(Prodigal, GeneMarkS) = 0.94); Glimmer is similar to both Prodigal and GeneMarkS (J(Glimmer, Prodigal) = J(Glimmer, GeneMarkS) = 0.92); while PHANOTATE is the most different because of the large number of ORFs that it predicts as proteins that the others do not (see below; J(PHANOTATE, Prodigal)) = 0.88; J(PHANOTATE, Glimmer) = J(PHANOTATE, GeneMarkS) = 087).", "sentences": [], "annotations": [], "relations": []}, {"offset": 17437, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "Each of the tools identified a set of predicted genes that were not identified by any of the other software. PHANOTATE version 1.0 predicted 15\u00a0105 genes (6% of the total number of genes predicted by all software) that were not predicted by other gene prediction algorithms. An ANOVA comparison between the lengths of the genes identified by 1, 2, 3 or 4 gene callers identified significant variation [F(1, 861\u00a0781) = 21\u00a0312.85, P\u2009=\u20090.0], but the effect size was very small (d = 0.02). A post hoc Tukey\u2019s test showed that there was no difference between the lengths of genes identified by a single gene caller or two gene callers (P > 0.05), but that all other pairwise comparisons were different. When we consider just the unique genes that were identified by each algorithm the ANOVA comparison identified significant variation in the lengths of the genes [F(3, 20\u2009856) = 56.6, P\u2009=\u20090], but again the effect size was very small (d = 0.01). The post hoc Tukey\u2019s test showed that there were two groups that were significantly different between groups but not within groups (P\u2009<\u20090.05). Glimmer (M\u2009=\u2009217\u2009nt, SD = 174.35) and Prodigal (M\u2009=\u2009226 nt, SD = 151.58) had indistinguishable mean lengths of unique genes, while the mean lengths of PHANOTATE (M\u2009=\u2009210\u2009nt, SD = 245.94) and GeneMarkS (M\u2009=\u2009183\u2009nt, SD = 109.06) were indistinguishable.", "sentences": [], "annotations": [], "relations": []}, {"offset": 18815, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "We cannot simply rely on the GenBank annotations to be correct. First, the proteins annotated in GenBank are typically predicted by the gene callers used in this comparison (Supplementary Table S1). Second, many of the current phage genome annotations in GenBank are filled with false positives. For example, in the Shiga toxin-converting phages (NC_004913 and NC_004914), every ORF longer than 160 bp has been annotated as a protein-coding gene. There are also abundant examples of false negatives, protein-coding genes present in the genome that were not identified by the annotation software. The most obvious false negatives are genes shorter than 100 bp, since this is an often-used arbitrary minimum cutoff. Small genes that do not show strong coding signals, such as shared homology to known or hypothetical genes in the databases or shared codon usage, are often excluded by other gene annotators in an effort to minimize false positives.", "sentences": [], "annotations": [], "relations": []}, {"offset": 19762, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "The best experimental approach to determine whether these genes encode proteins would be to identify the proteins via proteomics. However, there are few published phage proteomics studies, and in those studies, the raw proteomics data are not provided. Rather the authors only indicate which ORFs were matched, frequently using proprietary software and typically using gene calls made using the algorithms discussed here. This precludes our ability to use proteomics data to validate gene identification in phages.", "sentences": [], "annotations": [], "relations": []}, {"offset": 20277, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "In the absence of third-party validation datasets and experimental datasets, we turned to evolution to test whether the genes we predict in these phages may encode proteins. We hypothesized that protein-encoding genes are more likely to be evolutionarily conserved than ORFs that are not translated into proteins. Protein-encoding genes are constrained by the function of the protein. A variant of this approach has previously been used to identify genes in bacterial genomes. When we compared the genes that PHANOTATE predicted to the proteins in the GenBank non-redundant (nr) protein database, there was significant similarity to 23% of the predicted proteins (expect value < 10\u221210). This is similar to the 1\u201330% of phage proteins that typically have similarity to the GenBank nr database, and the remained is often called the \u2018phage dark matter\u2019. The mean lengths of the predicted genes that did not match to GenBank (243 nt) was significantly shorter than the mean length of those genes that matched GenBank (229\u2009nt) [t(1000) = 3.02, P < 0.005] but the effect size was small (d = 0.19). This may suggest that shorter proteins are under-represented in the database because of arbitrary lower limits on gene callers, shorter proteins have less statistical significance in similarity searches, or PHANOTATE is identifying more, shorter, ORFs and incorrectly suggesting they are proteins. We, therefore, sought an additional assurance of the genes predicted by PHANOTATE.", "sentences": [], "annotations": [], "relations": []}, {"offset": 21760, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "For a more rigorous analysis of the ability of sequence similarity to discriminate between coding and non-coding genes, we turned to the largest repository of sequence data, the NCBI SRA. Specifically, we extracted 94\u00a0652 random community metagenomes we previously identified. We constructed two control datasets: a set of presumed positive predictions comprised of all ORFs predicted by Glimmer, GeneMarkS and/or Prodigal (but not those only predicted by PHANOTATE), and a set of known negative annotations of ORFs that are longer than 90 bp and not predicted to encode proteins by any of the software used here, including PHANOTATE. We mapped the reads from the SRA to the ORFs using the translated search algorithm lastal. When we compared the number of reads that mapped for all ORFs that had at least one read map, significantly more reads mapped to the ORFs predicted to be proteins (mean 1871.5 reads mapped; standard deviation 15\u00a0933.2), than our negative control set (mean 136.0 reads mapped; standard deviation 1316.9) (Fig.\u00a02) [F(2, 149\u00a0770) = 37\u00a0900, P\u2009=\u20090.00]. There was a large effect size for this comparison (d = 0.9), as can be seen in Figure\u00a02. This analysis confirms that we are more likely to find reads mapping to ORFs if they encode proteins than if they do not encode proteins, and therefore we can use this approach to determine whether the ORFs predicted by PHANOTATE alone are likely to encode proteins. ", "sentences": [], "annotations": [], "relations": []}, {"offset": 23201, "infons": {"file": "btz265f2.jpg", "id": "btz265-F2", "section_type": "FIG", "type": "fig_caption"}, "text": "Violin plot of the ln(number or reads that map) to each of the ORFs predicted either by one (or more) of Prodigal, Glimmer or GeneMarkS; by no gene prediction algorithms (negative control); or by PHANOTATE alone", "sentences": [], "annotations": [], "relations": []}, {"offset": 23413, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "When we compare the ORFs that are only predicted by PHANOTATE and not predicted by the other ORF callers (\u223c6% of all the ORFs identified) with the two control sets, 72% of the time the ORFs predicted by PHANOTATE had mean read abundance that was indistinguishable from the mean abundance of the true proteins, but 79% of the time the mean read abundance was similar to the ORFs that were not predicted to be proteins. Similarly, the medium effect size suggests that similarities to ORFs identified by PHANOTATE lie between those predicted by any gene caller (d = 0.42) and those not predicted by any caller (d = 0.47) as can be seen in Figure\u00a02. The PHANOTATE predictions, therefore, lie between the \u2018true positives\u2019 from the other software and the \u2018true negatives\u2019 of all other ORFs, suggesting, but not confirming that they may encode real proteins.", "sentences": [], "annotations": [], "relations": []}, {"offset": 24276, "infons": {"section_type": "RESULTS", "type": "paragraph"}, "text": "One of the unique features of PHANOTATE is that it is essentially reference free. Other programs, such as Prodigal, GeneMark and Glimmer, use hidden Markov models that require either a priori knowledge of the composition of protein-encoding genes or the identification of sufficient protein-encoding genes in the genome to build a training set. This is problematic when annotating phage genomes since most potential ORFs do not have homology to any known gene and the small phage genomes do not provide enough candidates to create a robust training set. In addition, many phage genes are horizontally transferred, and thus have different properties and signals from each other. Future versions of PHANOTATE will include the option to use these various gene properties, including hexamer frequency, codon bias and non-Shine-Dalgarno RBS detection, and will also provide a mechanism to mask functional noncoding bases, such as those in RNAs, repeats, and att sites to further increase the accuracy of the gene calls.", "sentences": [], "annotations": [], "relations": []}, {"offset": 25291, "infons": {"section_type": "ACK_FUND", "type": "title_1"}, "text": "Funding", "sentences": [], "annotations": [], "relations": []}, {"offset": 25299, "infons": {"section_type": "ACK_FUND", "type": "paragraph"}, "text": "This work has been supported by the US Department of Defense: Defense Threat Reduction Agency grant number [DTRA10027-20149] and by a STEM scholarship award funded by the National Science Foundation grant [DUE-1259951] and the Computational Science Research Center at SDSU.", "sentences": [], "annotations": [], "relations": []}, {"offset": 25573, "infons": {"section_type": "ACK_FUND", "type": "paragraph"}, "text": " Conflict of Interest: None declared.", "sentences": [], "annotations": [], "relations": []}, {"offset": 25611, "infons": {"section_type": "SUPPL", "type": "title_1"}, "text": "Supplementary Material", "sentences": [], "annotations": [], "relations": []}, {"offset": 25634, "infons": {"section_type": "REF", "type": "title"}, "text": "References", "sentences": [], "annotations": [], "relations": []}, {"offset": 25645, "infons": {"fpage": "e126", "name_0": "surname:Akhter;given-names:S.", "pub-id_pmid": "22584627", "section_type": "REF", "source": "Nucleic Acids Res", "type": "ref", "volume": "40", "year": "2012"}, "text": "PhiSpy: a novel algorithm for finding prophages in bacterial genomes that combines similarity- and composition-based strategies", "sentences": [], "annotations": [], "relations": []}, {"offset": 25773, "infons": {"fpage": "W16", "lpage": "W21", "name_0": "surname:Arndt;given-names:D.", "pub-id_pmid": "27141966", "section_type": "REF", "source": "Nucleic Acids Res", "type": "ref", "volume": "44", "year": "2016"}, "text": "PHASTER: a better, faster version of the PHAST phage search tool", "sentences": [], "annotations": [], "relations": []}, {"offset": 25838, "infons": {"fpage": "512", "lpage": "524", "name_0": "surname:Badger;given-names:J.H.", "name_1": "surname:Olsen;given-names:G.J.", "pub-id_pmid": "10331277", "section_type": "REF", "source": "Mol. Biol. Evol", "type": "ref", "volume": "16", "year": "1999"}, "text": "CRITICA: coding region identification tool invoking comparative analysis", "sentences": [], "annotations": [], "relations": []}, {"offset": 25911, "infons": {"fpage": "87", "lpage": "90", "name_0": "surname:Bellman;given-names:R.", "section_type": "REF", "source": "Quart. Appl. Math", "type": "ref", "volume": "16", "year": "1958"}, "text": "On a routing problem", "sentences": [], "annotations": [], "relations": []}, {"offset": 25932, "infons": {"fpage": "D37", "lpage": "D42", "name_0": "surname:Benson;given-names:D.A.", "pub-id_pmid": "27899564", "section_type": "REF", "source": "Nucleic Acids Res", "type": "ref", "volume": "45", "year": "2017"}, "text": "GenBank", "sentences": [], "annotations": [], "relations": []}, {"offset": 25940, "infons": {"fpage": "3911", "lpage": "3920", "name_0": "surname:Besemer;given-names:J.", "name_1": "surname:Borodovsky;given-names:M.", "pub-id_pmid": "10481031", "section_type": "REF", "source": "Nucleic Acids Res", "type": "ref", "volume": "27", "year": "1999"}, "text": "Heuristic approach to deriving models for gene finding", "sentences": [], "annotations": [], "relations": []}, {"offset": 25995, "infons": {"fpage": "741", "lpage": "753", "name_0": "surname:Cahill;given-names:J.", "pub-id_pmid": "28040784", "section_type": "REF", "source": "G3", "type": "ref", "volume": "7", "year": "2017"}, "text": "Genetic analysis of the lambda spanins Rz and Rz1: identification of functional domains", "sentences": [], "annotations": [], "relations": []}, {"offset": 26083, "infons": {"name_0": "surname:Cohen;given-names:J.", "section_type": "REF", "source": "Statistical Power Analysis for the Behavioral Sciences L.", "type": "ref", "year": "1988"}, "text": "", "sentences": [], "annotations": [], "relations": []}, {"offset": 26084, "infons": {"fpage": "2928", "lpage": "2940", "name_0": "surname:Fagerquist;given-names:C.K.", "pub-id_pmid": "24584253", "section_type": "REF", "source": "Appl. Environ. Microbiol", "type": "ref", "volume": "80", "year": "2014"}, "text": "Top-down proteomic identification of Shiga toxin 2 subtypes from Shiga toxin-producing Escherichia coli by matrix-assisted laser desorption ionization-tandem time of flight mass spectrometry", "sentences": [], "annotations": [], "relations": []}, {"offset": 26275, "infons": {"name_0": "surname:Ford;given-names:L.R.;suffix:Jr", "section_type": "REF", "source": "Network Flow Theory.", "type": "ref", "year": "1956"}, "text": "", "sentences": [], "annotations": [], "relations": []}, {"offset": 26276, "infons": {"name_0": "surname:Fowler;given-names:J.", "section_type": "REF", "source": "Practical Statistics for Field Biology", "type": "ref", "year": "1998"}, "text": "", "sentences": [], "annotations": [], "relations": []}, {"offset": 26277, "infons": {"fpage": "119.", "name_0": "surname:Hyatt;given-names:D.", "pub-id_pmid": "20211023", "section_type": "REF", "source": "BMC Bioinformatics", "type": "ref", "volume": "11", "year": "2010"}, "text": "Prodigal: prokaryotic gene recognition and translation initiation site identification", "sentences": [], "annotations": [], "relations": []}, {"offset": 26363, "infons": {"name_0": "surname:Jones;given-names:E.", "section_type": "REF", "type": "ref", "year": "2001"}, "text": "", "sentences": [], "annotations": [], "relations": []}, {"offset": 26364, "infons": {"fpage": "114819", "name_0": "surname:Kang;given-names:H.S.", "section_type": "REF", "source": "bioRxiv", "type": "ref", "year": "2017"}, "text": "Prophage genomics reveals patterns in phage genome organization and replication", "sentences": [], "annotations": [], "relations": []}, {"offset": 26444, "infons": {"fpage": "487", "lpage": "493", "name_0": "surname:Kie\u0142basa;given-names:S.M.", "pub-id_pmid": "21209072", "section_type": "REF", "source": "Genome Res", "type": "ref", "volume": "21", "year": "2011"}, "text": "Adaptive seeds tame genomic sequence comparison", "sentences": [], "annotations": [], "relations": []}, {"offset": 26492, "infons": {"fpage": "231", "lpage": "238", "name_0": "surname:McNair;given-names:K.", "name_1": "surname:Clokie;given-names:M.R.J.", "section_type": "REF", "source": "Bacteriophages: Methods and Protocols", "type": "ref", "year": "2018"}, "text": "", "sentences": [], "annotations": [], "relations": []}, {"offset": 26493, "infons": {"fpage": "63", "lpage": "77", "name_0": "surname:Mokili;given-names:J.L.", "pub-id_pmid": "22440968", "section_type": "REF", "source": "Curr. Opin. Virol", "type": "ref", "volume": "2", "year": "2012"}, "text": "Metagenomics and future perspectives in virus discovery", "sentences": [], "annotations": [], "relations": []}, {"offset": 26549, "infons": {"fpage": "591", "lpage": "605", "name_0": "surname:Nakagawa;given-names:S.", "name_1": "surname:Cuthill;given-names:I.C.", "pub-id_pmid": "17944619", "section_type": "REF", "source": "Biol. Rev. Camb. Philos. Soc", "type": "ref", "volume": "82", "year": "2007"}, "text": "Effect size, confidence interval and statistical significance: a practical guide for biologists", "sentences": [], "annotations": [], "relations": []}, {"offset": 26645, "infons": {"fpage": "D7", "lpage": "19", "pub-id_pmid": "26615191", "section_type": "REF", "source": "Nucleic Acids Res", "type": "ref", "volume": "44", "year": "2016"}, "text": "Database resources of the National Center for Biotechnology Information", "sentences": [], "annotations": [], "relations": []}, {"offset": 26717, "infons": {"fpage": "353", "lpage": "373", "name_0": "surname:Ouyang;given-names:Z.", "pub-id_pmid": "15297987", "section_type": "REF", "source": "J. Bioinform. Comput. Biol", "type": "ref", "volume": "2", "year": "2004"}, "text": "Multivariate entropy distance method for prokaryotic gene identification", "sentences": [], "annotations": [], "relations": []}, {"offset": 26790, "infons": {"fpage": "e02145", "name_0": "surname:Pope;given-names:W.H.", "pub-id_pmid": "25467442", "section_type": "REF", "source": "MBio", "type": "ref", "volume": "5", "year": "2014"}, "text": "Genomics and proteomics of mycobacteriophage patience, an accidental tourist in the Mycobacterium neighborhood", "sentences": [], "annotations": [], "relations": []}, {"offset": 26901, "infons": {"fpage": "4529", "lpage": "4535", "name_0": "surname:Rohwer;given-names:F.", "name_1": "surname:Edwards;given-names:R.", "pub-id_pmid": "12142423", "section_type": "REF", "source": "J. Bacteriol", "type": "ref", "volume": "184", "year": "2002"}, "text": "The Phage Proteomic Tree: a genome-based taxonomy for phage", "sentences": [], "annotations": [], "relations": []}, {"offset": 26961, "infons": {"fpage": "e08490", "name_0": "surname:Roux;given-names:S.", "section_type": "REF", "source": "Elife", "type": "ref", "volume": "4", "year": "2015"}, "text": "Viral dark matter and virus-host interactions resolved from publicly available microbial genomes", "sentences": [], "annotations": [], "relations": []}, {"offset": 27058, "infons": {"fpage": "61", "name_0": "surname:Seabold;given-names:S.", "name_1": "surname:Perktold;given-names:J.", "section_type": "REF", "source": "Proceedings of the 9th Python in Science Conference", "type": "ref", "year": "2010"}, "text": "", "sentences": [], "annotations": [], "relations": []}, {"offset": 27059, "infons": {"fpage": "2068", "lpage": "2069", "name_0": "surname:Seemann;given-names:T.", "pub-id_pmid": "24642063", "section_type": "REF", "source": "Bioinformatics", "type": "ref", "volume": "30", "year": "2014"}, "text": "Prokka: rapid prokaryotic genome annotation", "sentences": [], "annotations": [], "relations": []}, {"offset": 27103, "infons": {"fpage": "3575", "lpage": "3582", "name_0": "surname:Sheetlin;given-names:S.L.", "pub-id_pmid": "25172925", "section_type": "REF", "source": "Bioinformatics", "type": "ref", "volume": "30", "year": "2014"}, "text": "Frameshift alignment: statistics and post-genomic applications", "sentences": [], "annotations": [], "relations": []}, {"offset": 27166, "infons": {"fpage": "1098", "lpage": "1112", "name_0": "surname:Summer;given-names:E.J.", "pub-id_pmid": "17900620", "section_type": "REF", "source": "J. Mol. Biol", "type": "ref", "volume": "373", "year": "2007"}, "text": "Rz/Rz1 lysis gene equivalents in phages of Gram-negative hosts", "sentences": [], "annotations": [], "relations": []}, {"offset": 27229, "infons": {"fpage": "2389", "lpage": "2391", "name_0": "surname:Torres;given-names:P.J.", "pub-id_pmid": "28369246", "section_type": "REF", "source": "Bioinformatics", "type": "ref", "volume": "33", "year": "2017"}, "text": "PARTIE: a partition engine to separate metagenomic and amplicon projects in the Sequence Read Archive", "sentences": [], "annotations": [], "relations": []}, {"offset": 27331, "infons": {"fpage": "37", "lpage": "47", "name_0": "surname:Wu;given-names:C.H.", "pub-id_pmid": "12798038", "section_type": "REF", "source": "Comput. Biol. Chem", "type": "ref", "volume": "27", "year": "2003"}, "text": "Protein family classification and functional annotation", "sentences": [], "annotations": [], "relations": []}], "annotations": [], "relations": []}]}]