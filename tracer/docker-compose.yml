services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: trace
      POSTGRES_PASSWORD: trace
      POSTGRES_DB: trace
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trace"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  sdk-proxy:
    build:
      context: ./libs/sdk-proxy
    # This service is not run by default, but it builds the image
    # used by the replay feature.
    command: ["true"] # A command that exits successfully

volumes:
  pgdata:
